# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/xlnx/xlnx,v-tpg.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Xilinx Video Test Pattern Generator (TPG)

description:
  AMD/Xilinx Video Test Pattern Generator IP is a soft IP designed to
  generate test video signal in AXI4-Stream Video format.
  https://docs.xilinx.com/r/en-US/pg103-v-tpg

maintainers:
  - Anatoliy Klymenko <anatoliy.klymenko@amd.com>

properties:
  compatible:
    description:
      TPG versions backward-compatible with previous versions should list all
      compatible versions in the newer to older order.
    enum: ["xlnx,v-tpg-8.0", "xlnx,v-tpg-8.2"]

  reg:
    maxItems: 1

  interrupts:
    maxItems: 1

  bus-format:
    description:
      Output media bus format, one of MEDIA_BUS_FMT_* from
      include/dt-bindings/media/media-bus-format.h
    $ref: /schemas/types.yaml#/definitions/uint32

  xlnx,bridge:
    description:
      Reference to Video Timing Controller phandle
    $ref: /schemas/types.yaml#/definitions/phandle

  ports:
    $ref: /schemas/graph.yaml#/properties/ports
    description:
      Connections from and to external components in the video pipeline.

    properties:
      port@0:
        $ref: /schemas/graph.yaml#/properties/port
        description:
          Sink port connected to downstream video IP.

      port@1:
        $ref: /schemas/graph.yaml#/properties/port
        description:
          Source port to connect to optional video signal source.

    required:
      - port@0

required:
  - compatible
  - reg
  - interrupts
  - bus-format
  - xlnx,bridge
  - ports

additionalProperties: false

examples:
  - |
    #include <dt-bindings/media/media-bus-format.h>

    tpg_0: tpg@40050000 {
      compatible = "xlnx,v-tpg-8.0";
      reg = <0x40050000 0x10000>;
      interrupts = <0 89 4>;
      xlnx,bridge = <&vtc_3>;
      bus-format = <MEDIA_BUS_FMT_UYVY8_1X16>;
      ports {
        #address-cells = <1>;
        #size-cells = <0>;
        port@0 {
          reg = <0>;
          tpg_out: endpoint {
            remote-endpoint = <&dp_encoder>;
          };
        };
      };
    };

...
